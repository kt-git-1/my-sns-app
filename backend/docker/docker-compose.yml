services:
  db:
    image: postgres:16-alpine
    container_name: sns-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      TZ: ${POSTGRES_TIMEZONE}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - sns-net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sns-pgadmin
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      TZ: ${POSTGRES_TIMEZONE}
    volumes:
      - pgadmin:/var/lib/pgadmin
      # ▼任意：サーバ接続を自動登録したい場合だけ有効化
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - sns-net

networks:
  sns-net:

volumes:
  pgdata:
  pgadmin:
